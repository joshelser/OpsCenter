name: PR Build Check

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - uses: pre-commit/action@v3.0.0
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: install dependencies
        run: |
          pip install poetry
          poetry install --with=dev
      - name: Make unique names for this job
        id: shell-command
        run: |
          SUFFIX=$(echo ${GITHUB_HEAD_REF} | sed "s/\./_/g" | sed "s/-/_/g" | sed "s\/\_\g")_${GITHUB_RUN_ID}
          echo "OPSCENTER_DATABASE=UNIT_TESTS_$SUFFIX" >> $GITHUB_ENV
      - name: Make snowsql config
        env:
          # Also uses OPSCENTER_DATABASE from above
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          mkdir $HOME/.snowsql
          envsubst < deploy/opscenter.config > $HOME/.snowsql/config
      - name: Run deploy/devdeploy.py (without triggering materializations)
        run: poetry run python deploy/devdeploy.py --profile opscenter --skip-finish-setup
      - name: Run pytests
        run: cd test && poetry run python -m pytest unit --profile opscenter
      - name: Cleanup Snowflake database
        run: poetry run python deploy/cypress_teardown.py --profile opscenter
      - name: Cleanup Snowflake database
        if: failure()
        run: poetry run python deploy/cypress_teardown.py --profile opscenter
  test-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Get suffix
        id: shell-command
        run:
          echo SUFFIX=$(echo ${GITHUB_HEAD_REF} | sed "s/\./_/g" | sed "s/-/_/g" | sed "s\/\_\g")_${GITHUB_RUN_ID} >> $GITHUB_ENV
      - name: set config
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          OPSCENTER_DATABASE: "DATABASE_CYPRESS_{{ env.SUFFIX }}"
        run: |
          mkdir $HOME/.snowsql
          envsubst < deploy/opscenter.config > $HOME/.snowsql/config
      - name: set env
        run: |
          echo "OPSCENTER_PACKAGE=PACKAGE_${SUFFIX}" >> "$GITHUB_ENV"
          echo "OPSCENTER_DATABASE=\"DATABASE_${SUFFIX}\"" >> "$GITHUB_ENV"
          echo "OPSCENTER_APP=APP_${SUFFIX}" >> "$GITHUB_ENV"
      - name: run deploy
        env:
          OPSCENTER_PACKAGE: ${{env.OPSCENTER_PACKAGE}}
          OPSCENTER_DATABASE: ${{env.OPSCENTER_DATABASE}}
          OPSCENTER_APP: ${{env.OPSCENTER_APP}}
          OPSCENTER_DROP_DATABASE: "true"
        run: "poetry run python deploy/deploy.py"
      - name: run teardown
        run: "poetry run python deploy/pr_teardown.py -a ${OPSCENTER_APP}"
      - name: run teardown
        if: failure()
        run: "poetry run python deploy/pr_teardown.py -a ${OPSCENTER_APP}"
